{
  "name": "grunt-minispade",
  "description": "wraps .js files in minispade closures for use with minispade.js",
  "version": "0.1.0",
  "homepage": "https://github.com/stevekane/grunt-minispade",
  "author": {
    "name": "Steven Kane",
    "email": "skane@4-south.com",
    "url": "http://stevekane.github.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stevekane/grunt-minispade.git"
  },
  "bugs": {
    "url": "https://github.com/stevekane/grunt-minispade/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/stevekane/grunt-minispade/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-minispade\n\n> wraps .js files in minispade closures for use with minispade.js\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-minispade --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-minispade');\n```\n\n## The \"minispade\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `minispade` to the data object passed into `grunt.initConfig()`.<br />\nYou will probably want to use the syntax of \"src-dest\" shown below in most cases as you are typically going to be wrapping many files in minispade closures and then concatenating them all into one output source file.\n```js\ngrunt.initConfig({\n  minispade: {\n    options: {\n      // Task-specific options go here.\n    },\n    files: {\n      src: ['whereMyFilesAre/*.js'],\n      dest: 'outputFile.js',\n    },\n  },\n})\n```\n#### Default Options\nChoose a separator character to place between concatenated files.  This feature is left in as a courtesy to other grunt plugins' formats but it's not particularly useful here and should be left alone in most cases. \n```js\ngrunt.initConfig({\n  minispade: {\n    options: {\n      separator: \"\", \n    },\n    files: {\n      //file stuff\n    },\n  },\n})\n```\n\n#### Custom Options\nrenameRequire: if your source files use \"require or requireAll\" you will need to find and replace them with \"minispade.require and minispade.requireAll\".  Set this flag to true to enable this feature.<br />\nuseStrict: adds javascript's 'use strict' inside each registered minispade closure.<br />\nprefixToRemove: if your source files come from a directory structure that doesn't match the structure your require statements use to find those modules, you may need to specific a string here that will be removed from all \"minispade.register\" closures.<br />\nE.G.  If your javascript files are first compiled from coffeescript files they may be outputted in a directory called \"compiledJS\".  Your register statements thus need to have \"compiledJS/\" removed from them in order for your requires to find them.\n```js\ngrunt.initConfig({\n  minispade: {\n    options: {\n      renameRequire: true,\n      useStrict: true,\n      prefixToRemove: \"\",      \n    },\n    files: {\n      //file stuff\n    },\n  },\n})\n```\n\n## Contributing\nTo contribute, contact @stv_kn or email kanesteven@gmail.com or skane@4-south.com.  Alternatively, create a fork and pull request on github. \n\n## Release History\n0.1.0 March 12, 2013 initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-minispade@0.1.0",
  "_from": "grunt-minispade@"
}
